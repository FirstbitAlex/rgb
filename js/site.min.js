let iti; const EMAIL_REGEX = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/; function validateEmailField(e) { const t = e.value.trim(), a = e.closest(".form-control-wrap"), n = a.querySelector(".validation-error"); return n && n.remove(), e.classList.remove("is-invalid"), !(t && !EMAIL_REGEX.test(t)) || (e.classList.add("is-invalid"), a.appendChild(createErrorElement("Неправильний формат email")), !1) } function createErrorElement(e) { const t = document.createElement("span"); return t.className = "validation-error", t.textContent = e, t } function validateForm(e) { const t = {}, a = e.get("user-name")?.trim(); a ? /^[a-zA-Zа-яА-ЯёЁіІїЇєЄґҐ]+(?: [a-zA-Zа-яА-ЯёЁіІїЇєЄґҐ]+)*$/u.test(a) || (t["user-name"] = "Ім'я повинно містити лише букви та один пробіл між словами") : t["user-name"] = "Поле \"Ім'я\" обов'язкове"; const n = e.get("user-phone")?.trim(); n ? /^\+\d{10,15}$/.test(n) || (t["user-phone"] = "Неправильний формат телефону") : t["user-phone"] = 'Поле "Телефон" обов\'язкове'; const i = e.get("user-email")?.trim(); return i && !EMAIL_REGEX.test(i) && (t["user-email"] = "Неправильний формат email"), t } document.addEventListener("DOMContentLoaded", (function () { ["utm_source", "utm_medium", "utm_campaign", "utm_term", "utm_content"].forEach((function (e) { var t = document.getElementById(e); if (t) { var a = new URLSearchParams(window.location.search).get(e) || ""; t.value = a } })); const e = document.querySelector("#phone-field"); e && (iti = window.intlTelInput(e, { initialCountry: "ua", separateDialCode: !0, autoInsertDialCode: !0, utilsScript: "https://cdn.jsdelivr.net/npm/intl-tel-input@19.5.6/build/js/utils.js" }), e.value = "+" + iti.getSelectedCountryData().dialCode, e.addEventListener("countrychange", (function () { e.value = "+" + iti.getSelectedCountryData().dialCode })), e.addEventListener("input", (function () { this.value = this.value.replace(/[^\d+]/g, "").replace(/(?!^)\+/g, "") })), e.addEventListener("focus", (function () { const e = "+" + iti.getSelectedCountryData().dialCode; this.value === e && this.setSelectionRange(this.value.length, this.value.length) }))); const t = document.querySelector('[name="user-name"]'); t && t.addEventListener("input", (function () { this.value = this.value.replace(/[^a-zA-Zа-яА-ЯёЁіІїЇєЄґҐ\s]/g, "").replace(/\s{2,}/g, " ").replace(/^\s/, "") })); const a = document.querySelector('[name="user-email"]'); a && a.addEventListener("blur", (function () { validateEmailField(this) })) })), jQuery(document).ready((function (e) { var t = e(".page__wrap"), a = e(".popup__wrap"); e("#lead-form").on("submit", (function (n) { n.preventDefault(); var i = e(this), s = new FormData(this); const r = validateForm(s); if (i.find(".validation-error").remove(), i.find(".is-invalid").removeClass("is-invalid"), Object.keys(r).length > 0) return void Object.keys(r).forEach((function (e) { var t = i.find('[data-name="' + e + '"]'), a = t.find('[name="' + e + '"]'); a.length && (a.addClass("is-invalid").attr("aria-invalid", "true"), t.append('<span class="validation-error">' + r[e] + "</span>")) })); var l = i.find(".submit-btn"); l.prop("disabled", !0).addClass("is-sending"); const o = new URLSearchParams(s).toString(); e.ajax({ url: ajaxurl, type: "POST", data: o + "&action=save_lead_to_cpt", dataType: "json", success: function (e) { if (l.prop("disabled", !1).removeClass("is-sending"), "success" === e.status) { i[0].reset(); i.find("#phone-field")[0] && iti && iti.setNumber("+" + iti.getSelectedCountryData().dialCode), t.length && a.length && (t.removeClass("block-visible").addClass("block-hidden"), a.removeClass("block-hidden").addClass("block-visible")) } else "validation_failed" === e.status ? e.errors && "object" == typeof e.errors && Object.keys(e.errors).forEach((function (t) { var a = i.find('[data-name="' + t + '"]'), n = a.find('[name="' + t + '"]'); n.length && (n.addClass("is-invalid").attr("aria-invalid", "true"), a.append('<span class="validation-error">' + e.errors[t] + "</span>")) })) : "error" === e.status && alert(e.message) }, error: function (e, t, a) { l.prop("disabled", !1).removeClass("is-sending"), alert("Помилка з'єднання. Перевірте підключення до інтернету і спробуйте ще раз.") } }) })), e(".popup__close-wrap").on("click", (function () { t.length && a.length && (t.removeClass("block-hidden").addClass("block-visible"), a.removeClass("block-visible").addClass("block-hidden")) })) }));